#!/usr/bin/perl
use OpenSRF::AppSession;

# default ingress value for all Apache/mod_perl clients
OpenSRF::AppSession->ingress('apache');

use OpenILS::WWW::Exporter qw( {{ opensrf_install_prefix }}/conf/opensrf_core.xml );
use OpenILS::WWW::SuperCat qw( {{ opensrf_install_prefix }}/conf/opensrf_core.xml );
use OpenILS::WWW::AddedContent qw( {{ opensrf_install_prefix }}/conf/opensrf_core.xml );
use OpenILS::WWW::Proxy ('{{ opensrf_install_prefix }}/conf/opensrf_core.xml');
use OpenILS::WWW::Vandelay qw( {{ opensrf_install_prefix }}/conf/opensrf_core.xml );
use OpenILS::WWW::TemplateBatchBibUpdate qw( {{ opensrf_install_prefix }}/conf/opensrf_core.xml );
use OpenILS::WWW::EGWeb ('{{ opensrf_install_prefix }}/conf/opensrf_core.xml', 'OpenILS::WWW::EGCatLoader', 'en_us');;
use OpenILS::WWW::IDL2js ('{{ opensrf_install_prefix }}/conf/opensrf_core.xml');
use OpenILS::WWW::FlatFielder;
use OpenILS::WWW::PhoneList ('{{ opensrf_install_prefix }}/conf/opensrf_core.xml');
use OpenILS::WWW::RemoteAuth ('{{ opensrf_install_prefix }}/conf/opensrf_core.xml', 'OpenILS::WWW::RemoteAuth::Basic');

# Pass second argument of '1' to enable template caching.
use OpenILS::WWW::PrintTemplate ('{{ opensrf_install_prefix }}/conf/opensrf_core.xml', 0);

# - Uncomment the following 2 lines to make use of the IP redirection code
# - The IP file should to contain a map with the following format:
# - actor.org_unit.shortname <start_ip> <end_ip>
# - e.g.  LIB123 10.0.0.1 10.0.0.254

#use OpenILS::WWW::Redirect qw({{ opensrf_install_prefix }}/conf/opensrf_core.xml);
#OpenILS::WWW::Redirect->parse_ips_file('{{ opensrf_install_prefix }}/conf/lib_ips.txt');


1;

